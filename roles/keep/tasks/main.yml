---

- name: Package prerequisites for node.js
  apt: pkg=python-software-properties state=installed
  sudo: yes

- name: Add the node.js PPA
  command: add-apt-repository -y ppa:chris-lea/node.js creates=/etc/apt/sources.list.d/chris-lea-node_js-precise.list
  sudo: yes

- name: Install nodejs (with npm)
  action: apt pkg=nodejs state=installed update-cache=yes
  sudo: yes

- name: Install required Node.js packages.
  npm: name={{ item }} global=yes
  with_items:
    - grunt-cli
  sudo: yes

- name: Setup general Apache config file.
  template: src=apache2.conf.j2 dest=/etc/apache2/apache2.conf
  sudo: yes
  notify: restart apache2

- name: Setup Apache ports config file.
  template: src=apache-ports.conf.j2 dest=/etc/apache2/ports.conf
  sudo: yes
  notify: restart apache2

- name: Setup KA Lite Apache site conf file.
  template: src=ka-lite-apache2-site.j2 dest=/etc/apache2/sites-available/001-kalite
  sudo: yes
  notify: restart apache2

- name: Enable the KA Lite Apache site.
  file: dest=/etc/apache2/sites-enabled/001-kalite src=/etc/apache2/sites-available/001-kalite state=link
  sudo: yes
  notify: restart apache2

- name: Remove default dummy Apache conf file.
  file: dest=/etc/apache2/sites-enabled/000-default state=absent
  sudo: yes
  notify: restart apache2

- name: Create the /var/www directory and set it as belonging to the www-data user.
  file: dest=/var/www owner=www-data state=directory
  sudo: yes

- name: Clone the KA Lite git repository and checkout the desired branch.
  git: repo=https://github.com/learningequality/ka-lite.git version={{ ka_lite_git_branch }} dest={{ ka_lite_path }}
  sudo: yes
  sudo_user: www-data
  register: kalite_clone
  notify: restart apache2

- name: Install required Node.js packages.
  npm: name={{ item }} path={{ ka_lite_path }}
  with_items:
    - grunt
    - less
    - grunt-contrib-less
  sudo: yes
  sudo_user: www-data

- name: Compile the static KA Lite resources by running the Gruntfile.
  command: grunt chdir={{ ka_lite_path }}
  sudo: yes
  sudo_user: www-data
  changed_when: False
  when: kalite_clone.changed

- name: Put the local_settings.py file into the KA Lite project directory.
  template: src=local_settings.py.j2 dest={{ ka_lite_path }}/kalite/local_settings.py
  sudo: yes
  sudo_user: www-data
  notify: restart apache2

- name: Ensure a local_settings_secret.py file exists.
  sudo: yes
  sudo_user: www-data
  command: touch {{ ka_lite_path }}/kalite/local_settings_secrets.py creates={{ ka_lite_path }}/kalite/local_settings_secrets.py

- name: Update the SECRET_KEY in local_settings_secret.py if variable 'ka_lite_secret_key' is defined.
  lineinfile: dest={{ ka_lite_path }}/kalite/local_settings_secrets.py regexp='^SECRET_KEY =' line='SECRET_KEY = "{{ ka_lite_secret_key }}"' owner="www-data"
  sudo: yes
  sudo_user: www-data
  when: ka_lite_secret_key is defined

- name: Update the POSTMARK_API_KEY in local_settings_secret.py if variable 'postmark_api_key' is defined.
  lineinfile: dest={{ ka_lite_path }}/kalite/local_settings_secrets.py regexp='^POSTMARK_API_KEY =' line='POSTMARK_API_KEY = "{{ postmark_api_key }}"' owner="www-data"
  sudo: yes
  sudo_user: www-data
  when: postmark_api_key is defined

- name: Update the DATABASE_PASSWORD in local_settings_secret.py if variable 'ka_lite_db_pass' is defined.
  lineinfile: dest={{ ka_lite_path }}/kalite/local_settings_secrets.py regexp='^DATABASE_PASSWORD =' line='DATABASE_PASSWORD = "{{ ka_lite_db_pass }}"' owner="www-data"
  sudo: yes
  sudo_user: www-data
  when: ka_lite_db_pass is defined

- name: Clear any old pyc files left over from an old branch or version.
  shell: "{{ ka_lite_path }}/kalite/manage.py clean_pyc"
  sudo: yes
  changed_when: False

- name: Run syncdb on KA Lite database to ensure it is initialized.
  shell: "{{ ka_lite_path }}/kalite/manage.py syncdb --noinput"
  register: syncdb
  sudo: yes
  sudo_user: www-data
  changed_when: "'Creating table ' in syncdb.stdout"

- name: Migrate KA Lite database to latest schema.
  shell: "{{ ka_lite_path }}/kalite/manage.py migrate --merge"
  register: migrate
  sudo: yes
  sudo_user: www-data
  changed_when: "'Migrating forwards' in migrate.stdout"

- name: Create Django superuser for KA Lite if needed.
  shell: "{{ ka_lite_path }}/kalite/manage.py createsuperuser --email=admin@learningequality.org --username={{ ka_lite_django_superuser_name }} --noinput"
  when: ka_lite_django_superuser_name is defined
  register: createsuperuser
  changed_when: "'Duplicate entry' not in createsuperuser.stderr"
  failed_when: "createsuperuser.stderr and 'Duplicate entry' not in createsuperuser.stderr"
  sudo: yes
  sudo_user: www-data

- name: Set Django superuser password for KA Lite if needed.
  shell: "echo 'from django.contrib.auth.models import User; u = User.objects.get(username=\"{{ ka_lite_django_superuser_name }}\"); print \"same_password\" if u.check_password(\"{{ ka_lite_django_superuser_pass }}\") else \"changed_password\"; u.set_password(\"{{ ka_lite_django_superuser_pass }}\"); u.save()' | {{ ka_lite_path }}/kalite/manage.py shell"
  when: ka_lite_django_superuser_name is defined and ka_lite_django_superuser_pass is defined
  register: setpassword
  changed_when: "'changed_password' in setpassword.stdout"
  sudo: yes
  sudo_user: www-data

# - name: Prepare directory where we build lang packs.
#   git: repo=https://github.com/learningequality/ka-lite.git dest=/tmp/ka-lite-build version=release-0.11 depth=1
#   sudo: yes
#   tags:
#     - language_packs

# - name: Build the language packs.
#   shell: "python /tmp/ka-lite-build/kalite/manage.py update_language_packs --ver=0.10.3"
#   sudo: yes
#   tags:
#     - language_packs

# - name: Ensure lang pack directory exists.
#   file: dest={{ ka_lite_path }}/kalite/media/language_packs/0.10.3/ owner=www-data state=directory
#   sudo: yes
#   tags:
#     - language_packs

# - name: Copy built language packs to lang pack directory.
#   shell: "cp /tmp/ka-lite-build/kalite/media/language_packs/0.10.3/*.* {{ ka_lite_path }}/kalite/media/language_packs/0.10.3/"
#   sudo: yes
#   notify:
#     - restart apache2
#   tags:
#     - language_packs

# - name: Copy database fixture to server.
#   copy: src=data.json dest=/var/www/data.json owner=www-data

# - name: Load database fixture.
#   shell: "{{ ka_lite_path }}/kalite/manage.py loaddata /var/www/data.json"
