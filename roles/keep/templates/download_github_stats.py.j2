#!/usr/bin/env python

import re, requests, json, os

PATH = os.path.dirname(os.path.realpath(__file__))

def update_json_file(filename, data):

    try:
        with open(filename, "r") as f:
            data_dict = json.loads(f.read() or "{}")
    except IOError:
        data_dict = {}

    with open(filename, "w") as f:
        for day in data:
            bucket = str(day.pop("bucket"))
            if bucket not in data_dict:
                data_dict[bucket] = day
        json.dump(data_dict, f)

def get_github_graph_data(path):

    s = requests.session()
    r = s.get("https://github.com/login")
    csrf = re.search('<input name="authenticity_token" type="hidden" value="[^"]+', r.content).group().split('"')[-1]
    r = s.post("https://github.com/session", data={
        "utf8": "Q",
        "authenticity_token": csrf,
        "login": "learneq",
        "password": "{{ learneq_github_password }}",
        "return_to": path,
        "commit": "Sign in",
    })

    return json.loads(r.content)["counts"]

clone_data = get_github_graph_data("/learningequality/ka-lite/graphs/clone-activity-data")

traffic_data = get_github_graph_data("/learningequality/ka-lite/graphs/traffic-data")

update_json_file(os.path.join(PATH, "clone_data.json"), clone_data)

update_json_file(os.path.join(PATH, "traffic_data.json"), traffic_data)

